<html lang="es">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Estilos -->
    <link rel="stylesheet" href="/css/dashboard.css" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body>
    <div class="container">
        <!-- Mensaje de bienvenida -->
        <div class="welcome-container text-center">
            <h1>Bienvenido, {{username}}</h1>
            <button onclick="logout()" class="neon-logout">Cerrar sesión</button>
        </div>

        <!-- Botones de navegación -->
        <div class="text-center mb-4">
            <button class="reserve-btn" onclick="mostrarSeccion('crear-reserva')">Crear Nueva Reserva</button>
            <button class="reserve-btn" onclick="cargarReservas()">Ver Reservas</button>
            <button class="reserve-btn" onclick="mostrarSeccion('ver-juegos')">Ver Juegos</button>

        </div>

        <!-- Sección: Crear Reserva -->
        <div id="crear-reserva" style="display: none;">
            <h3 class="text-center">Crear Nueva Reserva</h3>
            <form class="form" action="/create" method="POST">
                <input type="hidden" name="username" value="{{username}}" />

                <div class="mb-3">
                    <label for="estacion" class="form-label">Selecciona una estación:</label>
                    <select id="estacion" name="estacion" class="form-control" onchange="updateCategory()">
                        {{#each data}}
                        <option value="{{number}}" data-category="{{category}}">
                            {{category}} - {{number}}
                        </option>
                        {{/each}}
                    </select>
                    <input type="hidden" id="category" name="category" />
                </div>

                <div class="mb-3">
                    <label for="game">Selecciona un juego:</label>
                    <select id="game" name="game" required>
                        <option value="" disabled selected>-- Selecciona un juego --</option>
                        {{#each juegos}}
                        <option value="{{nombre}}">{{nombre}}</option>
                        {{/each}}
                    </select>
                </div>

                <!-- Campo para seleccionar la fecha -->
                <div class="mb-3">
                    <label for="fecha" class="form-label">Selecciona la fecha:</label>
                    <input type="date" id="fecha" name="fecha" class="form-control" required />
                </div>

                <!-- Campo para seleccionar la hora -->
                <div class="mb-3">
                    <label for="hora" class="form-label">Selecciona la hora:</label>
                    <input type="time" id="hora" name="hora" class="form-control" required />
                </div>

                <button type="submit" class="reserve-btn">Reservar</button>
            </form>

            <script>
                function updateCategory() {
                    let select =
                        document.getElementById("estacion"); let category =
                            select.options[select.selectedIndex].getAttribute("data-category");
                    document.getElementById("category").value = category;
                }
                updateCategory();
            </script>
        </div>

        <!-- Sección: Ver Reservas -->
        <div id="ver-reservas" style="display: none;">
            <h3 class="text-center">Tus Reservas</h3>
            <table class="table" id="tabla-reservas">
                <thead>
                    <tr>
                        <th>ESTACIONES</th>
                        <th>JUEGO</th>
                        <th>FECHA</th>
                        <th>HORA</th>
                        <th>ACCIONES</th>
                    </tr>
                </thead>
                <tbody>
                    <td>
                        <a href="/reservas/editar/{{this._id}}" class="btn btn-warning">Editar</a>
                        <button onclick="eliminarReserva('{{this._id}}')" class="btn btn-danger">Eliminar</button>
                    </td>
                </tbody>
            </table>
        </div>

        <!-- Sección: Ver Juegos -->
        <div id="ver-juegos" style="display: none;">
            <h3 class="text-center">Lista de Juegos</h3>
            <div class="row">
                {{#each juegos}}
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="{{imagen}}" class="card-img-top" alt="{{nombre}}"
                            style="height: 300px; object-fit: cover;">
                        <div class="card-body text-white"
                            style="background-color: #1e1e1e; border-radius: 0 0 10px 10px;">
                            <h5 class="card-title">{{nombre}}</h5>
                            <p class="card-text"><strong>Género:</strong> {{genero}}</p>
                            <p class="card-text">{{descripcion}}</p>
                        </div>

                    </div>
                </div>
                {{/each}}
            </div>
        </div>
    </div>
</body>

</html>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<!-- Scripts -->
<script>
    function logout() {
        window.location.href = "/login"; // O la ruta donde tengas tu login
    }


    function mostrarSeccion(seccion) {
        const secciones = ['crear-reserva', 'ver-reservas', 'ver-juegos'];
        secciones.forEach(id => {
            document.getElementById(id).style.display = 'none';
        });

        const seleccionada = document.getElementById(seccion);
        if (seleccionada) {
            seleccionada.style.display = 'block';
        }
    }


    function eliminarReserva(id) {
        if (confirm('¿Estás seguro de que deseas eliminar esta reserva?')) {
            fetch(`/delete/${id}`, { method: 'POST' })
                .then(() => window.location.reload())
                .catch(error => console.error('Error:', error));
        }
    }   
</script>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");

        form.addEventListener("submit", function (event) {
            event.preventDefault(); // Evita el envío inmediato del formulario

            Swal.fire({
                title: "¿Confirmar reserva?",
                text: "¿Estás seguro de que quieres reservar este turno?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sí, reservar",
                cancelButtonText: "Cancelar"
            }).then((result) => {
                if (result.isConfirmed) {
                    crearReserva(); // Llama a la función para enviar la solicitud
                }
            });
        });
    });

    async function crearReserva() {
        event.preventDefault(); // Evita el comportamiento por defecto

        const form = document.querySelector("form");
        const formData = new FormData(form); // Captura los datos del formulario
        const datos = Object.fromEntries(formData.entries()); // Convierte FormData a objeto JSON
        console.log("Datos de la reserva:", datos);
        try {
            const response = await fetch("/create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(datos)
            });

            const data = await response.json();

            if (response.status === 400) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: data.error,
                    confirmButtonColor: "#d33"
                });
            } else {
                Swal.fire({
                    icon: "success",
                    title: "Reserva realizada",
                    text: "Tu reserva ha sido confirmada.",
                    confirmButtonColor: "#3085d6"
                }).then(() => {
                    window.location.reload(); // Recarga la página o redirige si es necesario
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                title: "Error inesperado",
                text: "Ocurrió un problema al procesar tu solicitud.",
                confirmButtonColor: "#d33"
            });
        }
    }


    async function cargarReservas() {
        try {
            // Mostrar solo la sección de reservas
            document.getElementById("ver-reservas").style.display = "block";
            document.getElementById('crear-reserva').style.display = 'none';
            document.getElementById('ver-juegos').style.display = 'none';

            const username = new URLSearchParams(window.location.search).get("username");
            if (!username) {
                console.error("No hay usuario en la URL");
                return;
            }

            const response = await fetch(`/reservations?username=${username}`);
            const { userReservations: reservas, stations: estaciones } = await response.json();



            console.log("Reservas del usuario:", reservas);
            console.log("Estaciones:", estaciones);

            let tableBody = document.querySelector("#tabla-reservas tbody");
            tableBody.innerHTML = ""; // Limpiar tabla

            reservas.forEach(reserva => {
                const row = document.createElement("tr");

                row.innerHTML = `
                <td>
                    <select id="station-${reserva._id}" disabled>
                        ${estaciones.map(estacion => {
                    const value = `${estacion.category}|${estacion.number}`;
                    const selected = (reserva.category === estacion.category && reserva.number === estacion.number) ? "selected" : "";
                    return `<option value="${value}" ${selected}>${estacion.category} - ${estacion.number}</option>`;
                }).join("")}
                    </select>
                </td>
                <td>
                    <select id="game-${reserva._id}" disabled>
                        {{#each juegos}}
                        <option value="{{nombre}}" ${reserva.game === '{{nombre}}' ? 'selected' : ''}>{{nombre}}</option>
                        {{/each}}
                    </select>
                </td>
                <td>
                    <input type="date" id="fecha-${reserva._id}" value="${reserva.fecha}" disabled>
                </td>
                <td>
                    <input type="time" id="hora-${reserva._id}" value="${reserva.hora}" disabled>
                </td>
                <td>
                    <button onclick="habilitarEdicion('${reserva._id}')" class="btn btn-warning">Editar</button>
                    <button onclick="guardarEdicion('${reserva._id}')" class="btn btn-success" style="display:none;">Guardar</button>
                    <button onclick="eliminarReserva('${reserva._id}')" class="btn btn-danger">Eliminar</button>
                </td>
            `;

                tableBody.appendChild(row);
            });

        } catch (error) {
            console.error("Error al cargar reservas:", error);
        }
    }


    function habilitarEdicion(id) {
        document.getElementById(`station-${id}`).disabled = false;
        document.getElementById(`game-${id}`).disabled = false;
        document.getElementById(`fecha-${id}`).disabled = false;
        document.getElementById(`hora-${id}`).disabled = false;

        // Mostrar botón de guardar y ocultar botón de editar
        event.target.style.display = "none";
        event.target.nextElementSibling.style.display = "inline-block";
    }

    async function guardarEdicion(id) {
        const stationValue = document.getElementById(`station-${id}`).value;
        const [category, number] = stationValue.split('|');
        const fecha = document.getElementById(`fecha-${id}`).value;
        const hora = document.getElementById(`hora-${id}`).value;
        const game = document.getElementById(`game-${id}`).value;

        const response = await fetch(`/edit/${id}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ category, number, fecha, hora, game })
        });

        if (response.ok) {
            Swal.fire({
                position: "center",
                icon: "success",
                title: "Reserva actualizada correctamente",
                showConfirmButton: false,
                timer: 1500
            });

        } else {
            Swal.fire({
                icon: "error",
                title: "¡Error!",
                text: response.message,
                confirmButtonColor: "#d33"
            });
        }
        cargarReservas();
    }

    function eliminarReserva(id) {

        Swal.fire({
            title: "Estas seguro de eliminar?",
            text: "No se pueden revertir cambios!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Si, eliminar!",
            cancelButtonText: "Cancelar"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/delete/${id}`, { method: 'POST' })
                    .then(() => {
                        Swal.fire({
                            title: "Eliminado!",
                            text: "Tu reserva ha sido eliminada.",
                            icon: "success",
                            timer: 2500
                        });
                    })
                    .then(() => cargarReservas())
            }

        });
    }
</script>